\ Entry point for metacompiling the portable kernel to Mocha 86k
\ Most of the heavy lifting is done in other files, this is just orchestrating.

REQUIRE ../host/vocabularies.ft

host definitions REQUIRE assembler.ft

host REQUIRE ../host/helpers.ft
host REQUIRE model.ft
host REQUIRE ../host/dictionary.ft
host REQUIRE ../host/mirrors.ft

\ Now we have what we need to metacompile the CODE definitions at the heart of
\ the new kernel.
host REQUIRE kernel.ft

\ Overwrite the jump target of the entry code to be main.
\ The instruction is at $0000 and its target argument at $0001-2.
main 1 t!

\ The main part of the metacompiler
host REQUIRE ../host/metacompiler.ft

\ Now an interleaved dance of shared and target-specific metacompiled code.
host REQUIRE ../shared/basics.ft
host REQUIRE branches.ft               \ Target-specific branching helpers.
host REQUIRE ../shared/control-structures.ft
host REQUIRE ../shared/exceptions.ft
host REQUIRE model-target.ft
host REQUIRE ../shared/input.ft
host REQUIRE ../shared/core2.ft
host REQUIRE ../shared/refill.ft
host REQUIRE lib.ft                    \ Division etc. helpers
host REQUIRE hardware.ft               \ Can't borrow from DCPU-16; 32-bit values differ
host REQUIRE ../dcpu16/screen.ft       \ Can borrow DCPU-16's screen handler
host REQUIRE ../shared/output.ft
host REQUIRE ../shared/error-messages.ft
host REQUIRE ../dcpu16/disks.ft        \ DCPU-16/Risque-16 floppy drive
host REQUIRE ../dcpu16/intro.ft        \ DCPU-16/Risque-16 HW init; intro msg
host REQUIRE ../shared/init.ft         \ Shared init code.

host REQUIRE ../host/debugging.ft    \ Shared init code.
\ NB: You should always include tail.ft as the last stage of your build.
\ It actually emits the assembled image.

\ Known-missing words ========================================================
\ Core: ENVIRONMENT? WORD

\ START HERE: Branching is busted on Mocha 86k; missing some juggling somewhere.
